name: Pipeline RoxsOnfire

on:

    workflow_dispatch:
        inputs:
          chaos:
            description: 'Trigger chaos experiment'
            required: false
            default: 'false'

jobs:

  chaos-aws-fis:
    name: ðŸ“‘ Experiments AWS FIS
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.chaos == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1" 
          
      - name: Check AWS credentials
        run: aws sts get-caller-identity
        
      - name: Execute Experiment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          echo "Creating Reboot template"
          REGION=$(aws ec2 describe-availability-zones --output text --query 'AvailabilityZones[0].[RegionName]')
          ACCOUNT_ID=$(aws sts get-caller-identity --output text --query 'Account')
          TEMPLATE_NAME="RebootInstancia"
          TEMPLATE_ID=$(aws fis list-experiment-templates --query "experimentTemplates[?tags.Name=='${TEMPLATE_NAME}'].id" --output text)
          echo "Template ID: $TEMPLATE_ID"
          
          experiment_output=$(aws fis start-experiment --experiment-template-id "$TEMPLATE_ID")
          
          if [ $? -eq 0 ]; then
            echo "Experiment started successfully."
            
            # Extracting the ID of the started experiment
            experiment_id=$(echo "$experiment_output" | jq -r '.experiment.id')
            export experiment_id 
            echo "Started Experiment ID: $experiment_id"
            
            job_status=""
            while [[ $job_status != "completed" && $job_status != "failed" ]]; do
              sleep 20
              job_status=$(aws fis get-experiment --id="$experiment_id" | jq -r .experiment.state.status)
            done
            echo "$job_status"
            
          else
            echo "Failed to start experiment."
          fi
